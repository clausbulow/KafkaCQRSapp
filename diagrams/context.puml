@startuml
'https://plantuml.com/sequence-diagram

autonumber

Participant quyery as "Query Model" << BusinessApplication >>
Participant internal as "Internal Messaging" << BusinessApplication >>
Participant writeModel as "Aggregate" << BusinessApplication >>
Participant lifeCycleHanlder as "LifeCyckleHandler" << BusinessApplication >>

Participant localDBWrite as "LocalDB" << BusinessApplication >>
Participant stateStore as "State Store"
Participant connector as "Debezium Connector"
Participant broker as "Kafka Broker"
Participant transformer as "cdc2EventTransformer" <<Kafka Streams application>>
Participant reciever as "Application message reciever" << BusinessApplication >>
Participant readModel as "Application Read-Model" << BusinessApplication >>
Participant localDBRead as "LocalDB" << BusinessApplication >>

quyery -> internal: Command
internal -> writeModel: CommandHandler
writeModel -> writeModel: Verify Command
writeModel -> lifeCycleHanlder: Apply BusinessEvent
lifeCycleHanlder -> writeModel: EvenSourcingHandler (BusinessEvent)
writeModel -> localDBWrite: update Write-Model
lifeCycleHanlder -> stateStore: fireEvent(BusinessEvent)
stateStore --> connector: CDCEvent
connector -> broker: CDCEvent
broker --> transformer:CDCEvent
transformer --> broker: BusinessEvent
broker --> reciever: BusinessEvent
reciever --> internal: BusinessEvent
internal -> readModel: EventHandler(BusinessEvent)
readModel -> localDBRead: update Read-Model



@enduml